Ext.data.JsonP.cross_page_testing({"guide":"<h2 id='cross_page_testing-section-1'>Description</h2>\n<div class='toc'>\n<p><strong>Contents</strong></p>\n<ol>\n<li><a href='#!/guide/cross_page_testing-section-1'>Description</a></li>\n<li><a href='#!/guide/cross_page_testing-section-2'>Cross page testing</a></li>\n<li><a href='#!/guide/cross_page_testing-section-3'>Note about setTimeout</a></li>\n<li><a href='#!/guide/cross_page_testing-section-4'>Limitations</a></li>\n<li><a href='#!/guide/cross_page_testing-section-5'>Example</a></li>\n<li><a href='#!/guide/cross_page_testing-section-6'>Buy this product</a></li>\n<li><a href='#!/guide/cross_page_testing-section-7'>Support</a></li>\n<li><a href='#!/guide/cross_page_testing-section-8'>See also</a></li>\n<li><a href='#!/guide/cross_page_testing-section-9'>Attribution</a></li>\n<li><a href='#!/guide/cross_page_testing-section-10'>COPYRIGHT AND LICENSE</a></li>\n</ol>\n</div>\n\n<p><strong>This feature is experimental and any related functionality is subject to change.</strong></p>\n\n<p>Modern RIA applications rarely require a full page refresh, but sometimes you may still need to write such test,\nfor example when testing a login form submit. This guide describes the specifics of writing such a test.</p>\n\n<p>Please note, that this functionality is available only in the <a href=\"http://bryntum.com/store/siesta\">Standard Package</a>.</p>\n\n<h2 id='cross_page_testing-section-2'>Cross page testing</h2>\n\n<p>To be able to test the page refresh/redirect, the <em>test script</em> (*.t.js file) should reside in a different context from the <em>test page</em>.\nThis can be achieved with the separateContext option of the harness.\nDespite being a harness option, it should normally only be used in individual test descriptors:</p>\n\n<pre><code>Harness.start(\n    '010_normal_test.t.js',\n    {\n        separateContext     : true,\n        url                 : '020_page_redirect.t.js'\n    }\n)\n</code></pre>\n\n<p>Please note, that any preload files you have will still be loaded in the context of the <em>test page</em> and <strong>not</strong> the context of the script.</p>\n\n<p>Since contexts are separated, you will need to use <code>t.global</code> to reach any global objects of the test page.</p>\n\n<pre><code>StartTest(function (t) {\n\n    // BAD - the \"MyApp\" global is loaded into different page\n    var store = new MyApp.MyStoreClass();\n\n\n    // GOOD - pick the \"MyApp\" global from the test page\n    var store = new t.global.MyApp.MyStoreClass();\n\n    // BEST - save all required globals upfront, in variables\n    var MyApp   = t.global.MyApp;\n    var Ext     = t.Ext();\n}) \n</code></pre>\n\n<p>There a special shortcut <code>t.getExt() / t.Ext()</code> for <code>t.global.Ext</code> if you are testing an Ext JS application.</p>\n\n<p>When you need to perform a page redirect or refresh use <code>t.waitForPageLoad()</code> method. It accepts a callback which will receive the <code>window</code> object of the new page (same as <code>t.global</code>).\nIn case of using the Ext JS testing layer, it will also receive the new <code>Ext</code> object as the 2nd argument. <strong>Don't forget to update your references to the global objects - they are now different!</strong></p>\n\n<pre><code>    t.waitForPageLoad(function (window, Ext) {\n        //                               | \n        // new reference to `MyApp` and Ext\n        //                     |\n        var MyApp   = window.MyApp;\n\n        var panel   = Ext.getCmp('authResult')\n\n        t.is(panel.authResult, 'success', 'Correct authentication result')\n    })\n</code></pre>\n\n<h2 id='cross_page_testing-section-3'>Note about setTimeout</h2>\n\n<p>The <code>setTimeout</code> function in browsers is not synchronized across different contexts. Thus if you will call <code>setTimeout</code> inside of the <em>test page</em> with lets say 100ms delay,\nand then you call <code>setTimeout</code> from the <em>test script</em> with 150ms delay, there's no guarantee that the 1st function will actually be called first.</p>\n\n<p>Because of that, it's recommended to always use the <code>setTimeout</code> from the scope of the <em>test page</em>: <code>t.global.setTimeout</code>.\nSiesta provides a simple shortcut for that: t.setTimeout() / t.clearTimeout()</p>\n\n<pre><code>    // pick the `MyApp` from the scope of test page\n    var MyApp       = t.global.MyApp\n\n    // call the method, involving the deferred calls\n    MyApp.defer(function () {}, 100ms)\n\n    // BAD: this `setTimeout` is not synchronized with the `setTimeout` of the application\n    var timeoutId = setTimeout(function () {}, 150)\n\n    clearTimeout(timeoutId)\n\n\n    // GOOD: using `setTimeout` from the scope of test page\n    var timeoutId = t.setTimeout(function () {}, 150)\n\n    t.clearTimeout(timeoutId)\n</code></pre>\n\n<h2 id='cross_page_testing-section-4'>Limitations</h2>\n\n<ul>\n<li><p>Enabling the separateContext option will disable the <a href=\"#!/api/Siesta.Harness.Browser-cfg-overrideSetTimeout\" rel=\"Siesta.Harness.Browser-cfg-overrideSetTimeout\" class=\"docClass\">overrideSetTimeout</a>.\nWhen doing <strong>any</strong> asynchronous operation, use <a href=\"#!/api/Siesta.Test-method-beginAsync\" rel=\"Siesta.Test-method-beginAsync\" class=\"docClass\">t.beginAsync()</a>/<a href=\"#!/api/Siesta.Test-method-endAsync\" rel=\"Siesta.Test-method-endAsync\" class=\"docClass\">t.endAsync()</a> calls.</p></li>\n<li><p>Debugging is only possible in WebkitInspector and IE, Firebug can't see the test scripts for some reason.</p></li>\n</ul>\n\n\n<h2 id='cross_page_testing-section-5'>Example</h2>\n\n<p>See the \"/examples/100-standardpkg-page-redirect\"</p>\n\n<h2 id='cross_page_testing-section-6'>Buy this product</h2>\n\n<p>Visit our store: <a href=\"http://bryntum.com/store/siesta\">http://bryntum.com/store/siesta</a></p>\n\n<h2 id='cross_page_testing-section-7'>Support</h2>\n\n<p>Ask a question in our community forum: <a href=\"http://www.bryntum.com/forum/viewforum.php?f=20\">http://www.bryntum.com/forum/viewforum.php?f=20</a></p>\n\n<p>Share your experience in our IRC channel: <a href=\"http://webchat.freenode.net/?randomnick=1&amp;channels=bryntum&amp;prompt=1\">#bryntum</a></p>\n\n<p>Please report any bugs through the web interface at <a href=\"https://www.assembla.com/spaces/bryntum/support/tickets\">https://www.assembla.com/spaces/bryntum/support/tickets</a></p>\n\n<h2 id='cross_page_testing-section-8'>See also</h2>\n\n<p>Web page of this product: <a href=\"http://bryntum.com/products/siesta\">http://bryntum.com/products/siesta</a></p>\n\n<p>Other Bryntum products: <a href=\"http://bryntum.com/products\">http://bryntum.com/products</a></p>\n\n<h2 id='cross_page_testing-section-9'>Attribution</h2>\n\n<p>This software contains icons from the following icon packs (licensed under Creative Common 2.5/3.0 Attribution licenses)</p>\n\n<ul>\n<li><a href=\"http://www.famfamfam.com/lab/icons/silk/\">http://www.famfamfam.com/lab/icons/silk/</a></li>\n<li><a href=\"http://led24.de/iconset/\">http://led24.de/iconset/</a></li>\n<li><a href=\"http://p.yusukekamiyamane.com/\">http://p.yusukekamiyamane.com/</a></li>\n<li><a href=\"http://rrze-icon-set.berlios.de/index.html\">http://rrze-icon-set.berlios.de/index.html</a></li>\n<li><a href=\"http://www.smashingmagazine.com/2009/05/20/flavour-extended-the-ultimate-icon-set-for-web-designers/\">http://www.smashingmagazine.com/2009/05/20/flavour-extended-the-ultimate-icon-set-for-web-designers/</a></li>\n<li><a href=\"http://www.doublejdesign.co.uk/products-page/icons/super-mono-icons/\">http://www.doublejdesign.co.uk/products-page/icons/super-mono-icons/</a></li>\n<li><a href=\"http://pixel-mixer.com/\">http://pixel-mixer.com/</a></li>\n</ul>\n\n\n<p>Thanks a lot to the authors of the respective icons packs.</p>\n\n<h2 id='cross_page_testing-section-10'>COPYRIGHT AND LICENSE</h2>\n\n<p>Copyright (c) 2009-2012, Bryntum &amp; Nickolay Platonov</p>\n\n<p>All rights reserved.</p>\n","title":"Cross page testing"});