Ext.data.JsonP.Siesta_Test_Date({"tagname":"class","name":"Siesta.Test.Date","extends":null,"mixins":[],"alternateClassNames":[],"aliases":{},"singleton":false,"requires":[],"uses":[],"enum":null,"override":null,"inheritable":null,"inheritdoc":null,"meta":{},"private":null,"id":"class-Siesta.Test.Date","members":{"cfg":[],"property":[],"method":[{"name":"isDateEqual","tagname":"method","owner":"Siesta.Test.Date","meta":{},"id":"method-isDateEqual"}],"event":[],"css_var":[],"css_mixin":[]},"statics":{"cfg":[],"property":[],"method":[],"event":[],"css_var":[],"css_mixin":[]},"linenr":9,"files":[{"filename":"Date.js","href":"Date.html#Siesta-Test-Date"}],"html_meta":{},"component":false,"superclasses":[],"subclasses":[],"mixedInto":["Siesta.Test"],"parentMixins":[],"html":"<div><pre class=\"hierarchy\"><h4>Mixed into</h4><div class='dependency'><a href='#!/api/Siesta.Test' rel='Siesta.Test' class='docClass'>Siesta.Test</a></div><h4>Files</h4><div class='dependency'><a href='source/Date.html#Siesta-Test-Date' target='_blank'>Date.js</a></div></pre><div class='doc-contents'><p>A mixin with the additinal assertions for dates. Being consumed by <a href=\"#!/api/Siesta.Test\" rel=\"Siesta.Test\" class=\"docClass\">Siesta.Test</a></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-isDateEqual' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Test.Date'>Siesta.Test.Date</span><br/><a href='source/Date.html#Siesta-Test-Date-method-isDateEqual' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Test.Date-method-isDateEqual' class='name expandable'>isDateEqual</a>( <span class='pre'>Date got, Date expectedDate, String description</span> )</div><div class='description'><div class='short'>This assertion passes when the 2 provided dates are equal and fails otherwise. ...</div><div class='long'><p>This assertion passes when the 2 provided dates are equal and fails otherwise.</p>\n\n<p>It has a synonym: <code>isDateEq</code></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>got</span> : Date<div class='sub-desc'><p>The 1st date to compare</p>\n</div></li><li><span class='pre'>expectedDate</span> : Date<div class='sub-desc'><p>The 2nd date to compare</p>\n</div></li><li><span class='pre'>description</span> : String<div class='sub-desc'><p>The description of the assertion</p>\n</div></li></ul></div></div></div></div></div></div></div>"});